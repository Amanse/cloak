name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:
  ci:
    name: CI
    needs:
      - test
      - lint
    runs-on: ubuntu-latest
    steps:
      - name: Done
        run: exit 0
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    steps:
      - uses: fkirc/skip-duplicate-actions@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
  test:
    name: Tests
    needs:
      - prepare
    strategy:
      fail-fast: false
      matrix:
        rust:
          - 1.46.0
          - stable
        os:
          - windows-latest
          - macos-latest
          - ubuntu-latest
        target:
          - i686-pc-windows-msvc
          - x86_64-pc-windows-msvc
          - x86_64-unknown-linux-gnu
          - i686-unknown-linux-gnu
          - x86_64-apple-darwin
        exclude:
          - os: windows-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-unknown-linux-gnu
          - os: windows-latest
            target: i686-unknown-linux-gnu
          - os: macos-latest
            target: i686-pc-windows-msvc
          - os: macos-latest
            target: x86_64-pc-windows-msvc
          - os: macos-latest
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            target: i686-unknown-linux-gnu
          - os: ubuntu-latest
            target: i686-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-pc-windows-msvc
          - os: ubuntu-latest
            target: x86_64-apple-darwin
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust }}
          target: ${{ matrix.target }}
          override: true
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install linker
        if: matrix.target == 'i686-unknown-linux-gnu'
        run: |
          sudo apt-get update
          sudo apt-get install gcc-9-multilib lib32gcc-9-dev
      - name: Test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --target ${{ matrix.target }}
  lint:
    name: Linting (fmt + clippy)
    needs:
      - prepare
    runs-on: ubuntu-latest
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Checkout
        uses: actions/checkout@v2
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -- -D warnings
      - name: Format check
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  coverage:
    name: Coverage
    needs:
      - prepare
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - name: Install rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Coverage
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: --timeout 300 --output-dir coverage
      - name: Codecov
        uses: codecov/codecov-action@v1
        with:
          directory: coverage
